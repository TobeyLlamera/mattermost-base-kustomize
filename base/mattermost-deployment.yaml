apiVersion: apps/v1
kind: Deployment
metadata:
  name: mattermost-prod
  namespace: mattermost-prod
spec:
  serviceName: "mattermost-prod" 
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app: mattermost
      v1alpha1.mattermost.com/installation: mattermost-prod
      v1alpha1.mattermost.com/resource: mattermost-prod
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: mattermost
        v1alpha1.mattermost.com/installation: mattermost-prod
        v1alpha1.mattermost.com/resource: mattermost-prod
    spec:
      serviceAccount: mattermost-prod
      containers:
      - command:
        - mattermost
        env:
        - name: MYSQL_USERNAME
          valueFrom:
            secretKeyRef:
              key: USER
              name: mattermost-prod-mysql-root-password
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: PASSWORD
              name: mattermost-prod-mysql-root-password
        - name: MM_SQLSETTINGS_DATASOURCEREPLICAS
          value: $(MYSQL_USERNAME):$(MYSQL_PASSWORD)@tcp(db-41311d-mysql.mattermost-prod:3306)/mattermost?readTimeout=30s&writeTimeout=30s
        - name: MM_CONFIG
          value: mysql://$(MYSQL_USERNAME):$(MYSQL_PASSWORD)@tcp(db-41311d-mysql-master.mattermost-prod:3306)/mattermost?charset=utf8mb4,utf8&readTimeout=30s&writeTimeout=30s
        - name: MM_FILESETTINGS_DRIVERNAME
          value: amazons3
        - name: MM_FILESETTINGS_AMAZONS3ACCESSKEYID
          valueFrom:
            secretKeyRef:
              key: accesskey
              name: mattermost-prod-minio
        - name: MM_FILESETTINGS_AMAZONS3SECRETACCESSKEY
          valueFrom:
            secretKeyRef:
              key: secretkey
              name: mattermost-prod-minio
        - name: MM_FILESETTINGS_AMAZONS3BUCKET
          value: mattermost-prod
        - name: MM_FILESETTINGS_AMAZONS3ENDPOINT
          value: mattermost-prod-minio-hl-svc.mattermost-prod:9000
        - name: MM_FILESETTINGS_AMAZONS3SSL
          value: "false"
        - name: MM_SERVICESETTINGS_SITEURL
          value: https://mattermost-ingress
        - name: MM_PLUGINSETTINGS_ENABLEUPLOADS
          value: "true"
        - name: MM_METRICSSETTINGS_ENABLE
          value: "true"
        - name: MM_METRICSSETTINGS_LISTENADDRESS
          value: :8067
        - name: MM_CLUSTERSETTINGS_ENABLE
          value: "true"
        - name: MM_CLUSTERSETTINGS_CLUSTERNAME
          value: production
        - name: MM_FILESETTINGS_MAXFILESIZE
          value: "1048576000"
        image: mattermost/mattermost-enterprise-edition:5.27.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/v4/system/ping
            port: 8065
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: mattermost
        ports:
        - containerPort: 8065
          name: app
          protocol: TCP
        readinessProbe:
          failureThreshold: 6
          httpGet:
            path: /api/v4/system/ping
            port: 8065
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: "2"
            memory: 4Gi
          requests:
            cpu: 100m
            memory: 256Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - sh
        - -c
        - until curl --max-time 5 http://db-41311d-mysql-master.mattermost-prod:3306;
          do echo waiting for mysql; sleep 5; done;
        image: appropriate/curl:latest
        imagePullPolicy: IfNotPresent
        name: init-check-operator-mysql
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      - command:
        - /bin/sh
        - -c
        - mc config host add localminio http://mattermost-prod-minio-hl-svc.mattermost-prod:9000
          $(MINIO_ACCESS_KEY) $(MINIO_SECRET_KEY) && mc mb localminio/mattermost-prod
          -q -p
        env:
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: accesskey
              name: mattermost-prod-minio
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: secretkey
              name: mattermost-prod-minio
        image: minio/mc:latest
        imagePullPolicy: IfNotPresent
        name: create-minio-bucket
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      - command:
        - sh
        - -c
        - until curl --max-time 5 http://mattermost-prod-minio-hl-svc.mattermost-prod:9000/minio/health/ready;
          do echo waiting for minio; sleep 5; done;
        image: appropriate/curl:latest
        imagePullPolicy: IfNotPresent
        name: init-check-minio
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30